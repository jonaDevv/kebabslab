1733682009
0cc1308022480e537afa03931d99722c-phpdoc%3A57cab04c96d2527f426ec547f359a5e1-602411153e71cf7c25779f38982cd3b7
s:7948:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE5OiJBcGlfaW5ncmVkaWVudGUucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjYwMjQxMTE1M2U3MWNmN2MyNTc3OWYzODk4MmNkM2I3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MjM6IkFwaS9BcGlfaW5ncmVkaWVudGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo1MDUxOiI8P3BocAppbmlfc2V0KCdkaXNwbGF5X2Vycm9ycycsIDEpOwppbmlfc2V0KCdkaXNwbGF5X3N0YXJ0dXBfZXJyb3JzJywgMSk7CmVycm9yX3JlcG9ydGluZyhFX0FMTCk7CgpyZXF1aXJlICgiLi4vTUlhdXRvY2FyZ2Fkb3IucGhwIik7CnJlcXVpcmUgKCIuLi92ZW5kb3IvYXV0b2xvYWQucGhwIik7Cgp1c2UgTW9kZWxzXEluZ3JlZGllbnRlOwp1c2UgUmVwb3NpdG9yeVxyZXBvSW5ncmVkaWVudGU7CgokbWV0aG9kID0gJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ107Cgpzd2l0Y2ggKCRtZXRob2QpIHsKICAgIGNhc2UgJ0dFVCc6CiAgICAgICAgLy8gTMOzZ2ljYSBwYXJhIG1hbmVqYXIgR0VUIChvYnRlbmVyIHVubyBvIHZhcmlvcyBpbmdyZWRpZW50ZXMpCiAgICAgICAgaWYgKGlzc2V0KCRfR0VUWydpZCddKSAmJiAhZW1wdHkoJF9HRVRbJ2lkJ10pKSB7CiAgICAgICAgICAgICRpZCA9ICRfR0VUWydpZCddOwogICAgICAgICAgICAkaW5ncmVkaWVudGUgPSByZXBvSW5ncmVkaWVudGU6OnJlYWQoJGlkKTsgLy8gTcOpdG9kbyBwYXJhIG9idGVuZXIgdW4gaW5ncmVkaWVudGUgcG9yIElECiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gT2J0ZW5lciB0b2RvcyBsb3MgaW5ncmVkaWVudGVzCiAgICAgICAgICAgICRpbmdyZWRpZW50ZXMgPSByZXBvSW5ncmVkaWVudGU6OmdldEFsbCgpOyAvLyBNw6l0b2RvIHBhcmEgb2J0ZW5lciB0b2RvcyBsb3MgaW5ncmVkaWVudGVzCiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJ1BPU1QnOgogICAgICAgIC8vIENhcHR1cmEgbG9zIGRhdG9zIGRlbCBjdWVycG8gZGUgbGEgc29saWNpdHVkCiAgICAgICAgJGRhdGEgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cygicGhwOi8vaW5wdXQiKSwgdHJ1ZSk7IC8vIHRydWUgY29udmllcnRlIGVsIEpTT04gZW4gdW4gYXJyYXkgYXNvY2lhdGl2bwogICAgICAgIHZhcl9kdW1wKCRkYXRhKTsKICAgICAgICAvLyBWZXJpZmljYXIgc2kgc2UgcmVjaWJpZXJvbiB0b2RvcyBsb3MgZGF0b3MgbmVjZXNhcmlvcwogICAgICAgIGlmICgKICAgICAgICAgICAgaXNzZXQoJGRhdGFbMF1bJ25vbWJyZSddKSAmJiAvLyBWZXJpZmljYXIgc2kgZWwgY2FtcG8gbm9tYnJlIGVzdMOhIHByZXNlbnRlCiAgICAgICAgICAgIGlzc2V0KCRkYXRhWzBdWydmb3RvJ10pICYmIC8vIFZlcmlmaWNhciBzaSBlbCBjYW1wbyBmb3RvIGVzdMOhIHByZXNlbnRlCiAgICAgICAgICAgIGlzc2V0KCRkYXRhWzBdWydwcmVjaW8nXSkgJiYgLy8gVmVyaWZpY2FyIHNpIGVsIGNhbXBvIHByZWNpbyBlc3TDoSBwcmVzZW50ZQogICAgICAgICAgICBpc3NldCgkZGF0YVswXVsnZXN0YWRvJ10pICYmIC8vIFZlcmlmaWNhciBzaSBlbCBjYW1wbyBlc3RhZG8gZXN0w6EgcHJlc2VudGUKICAgICAgICAgICAgaXNzZXQoJGRhdGFbMF1bJ2FsZXJnZW5vcyddKSAvLyBWZXJpZmljYXIgc2kgZWwgY2FtcG8gYWxlcmdlbm9zIGVzdMOhIHByZXNlbnRlCiAgICAgICAgKSAgLy8gVmVyaWZpY2FyIHNpIGVsIGNhbXBvIGFsZXJnZW5vcyBlc3TDoSBwcmVzZW50ZQogICAgICAgICB7CiAgICAgICAgICAgIC8vIENyZWFyIGVsIG9iamV0byBJbmdyZWRpZW50ZQogICAgICAgICAgICAvLyBDcmVhciBlbCBvYmpldG8gSW5ncmVkaWVudGUKICAgICAgICAgICAgJGluZ3JlZGllbnRlID0gbmV3IEluZ3JlZGllbnRlKAogICAgICAgICAgICAgICAgbnVsbCwgIC8vIElEIHNlIGdlbmVyYXLDoSBhdXRvbcOhdGljYW1lbnRlCiAgICAgICAgICAgICAgICAkZGF0YVswXVsnbm9tYnJlJ10sCiAgICAgICAgICAgICAgICAkZGF0YVswXVsnZm90byddLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ3ByZWNpbyddLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ2VzdGFkbyddLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ2FsZXJnZW5vcyddIC8vIERlYmVzIGFzZWd1cmFydGUgcXVlIGVzdGUgc2VhIHVuIGFycmF5IGRlIElEcyBkZSBhbMOpcmdlbm9zCiAgICAgICAgICAgICk7CgoKICAgICAgICAgICAgLy8gSW50ZW50YXIgY3JlYXIgZWwgaW5ncmVkaWVudGUKICAgICAgICAgICAgaWYgKHJlcG9JbmdyZWRpZW50ZTo6Y3JlYXRlKCRpbmdyZWRpZW50ZSkpIHsKICAgICAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSgyMDEpOyAvLyBJbmdyZWRpZW50ZSBjcmVhZG8KICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiSW5ncmVkaWVudGUgY3JlYWRvIGNvbiDDqXhpdG8iXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoNTAwKTsgLy8gRXJyb3IgZW4gbGEgY3JlYWNpw7NuCiAgICAgICAgICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIkVycm9yIGFsIGNyZWFyIGVsIGluZ3JlZGllbnRlIl0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICAKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoNDAwKTsgLy8gQmFkIFJlcXVlc3QKICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJEYXRvcyBkZSBpbmdyZWRpZW50ZSBpbnbDoWxpZG9zIl0pOwogICAgICAgIH0KICAgICAgICBicmVhazsKCiAgICBjYXNlICdQVVQnOgogICAgICAgIC8vIENhcHR1cmEgbG9zIGRhdG9zIGRlbCBjdWVycG8gZGUgbGEgc29saWNpdHVkCiAgICAgICAgJGRhdGEgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cygicGhwOi8vaW5wdXQiKSwgdHJ1ZSk7IC8vIHRydWUgY29udmllcnRlIGVsIEpTT04gZW4gdW4gYXJyYXkgYXNvY2lhdGl2bwogICAgICAgIAogICAgICAgIC8vIFZlcmlmaWNhciBzaSBzZSByZWNpYmnDsyBlbCBJRAogICAgICAgIGlmIChpc3NldCgkZGF0YVswXVsnaWQnXSkpIHsKICAgICAgICAgICAgJGlkID0gJGRhdGFbMF1bJ2lkJ107IC8vIElEIGRlbCBpbmdyZWRpZW50ZSBhIGFjdHVhbGl6YXIKCiAgICAgICAgICAgIC8vIENyZWFyIHVuIG51ZXZvIG9iamV0byBpbmdyZWRpZW50ZSBjb24gbG9zIGRhdG9zIHByb3BvcmNpb25hZG9zCiAgICAgICAgICAgICRpbmdyZWRpZW50ZSA9IG5ldyBJbmdyZWRpZW50ZSgKICAgICAgICAgICAgICAgICRkYXRhWzBdWydpZCddLCAgLy8gSUQgZGVsIGluZ3JlZGllbnRlCiAgICAgICAgICAgICAgICAkZGF0YVswXVsnbm9tYnJlJ10gPz8gbnVsbCwKICAgICAgICAgICAgICAgICRkYXRhWzBdWydmb3RvJ10gPz8gbnVsbCwKICAgICAgICAgICAgICAgICRkYXRhWzBdWydwcmVjaW8nXSA/PyBudWxsLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ2VzdGFkbyddID8/IG51bGwsCiAgICAgICAgICAgICAgICAkZGF0YVswXVsnYWxlcmdlbm9zJ10gPz8gW10gLy8gQXJyYXkgZGUgSURzIGRlIGFsw6lyZ2Vub3MsIHNpIGV4aXN0ZQogICAgICAgICAgICApOwoKICAgICAgICAgICAgaGVhZGVyKCJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgICAgICAgLy8gTGxhbWFyIGFsIG3DqXRvZG8gZGUgYWN0dWFsaXphY2nDs24gZGVsIHJlcG9zaXRvcmlvCiAgICAgICAgICAgIGlmIChyZXBvSW5ncmVkaWVudGU6OnVwZGF0ZSgkaWQsICRpbmdyZWRpZW50ZSkpIHsKICAgICAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSgyMDApOyAvLyBPSwogICAgICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJJbmdyZWRpZW50ZSBhY3R1YWxpemFkbyBjb3JyZWN0YW1lbnRlIl0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwNCk7IC8vIE5vdCBGb3VuZAogICAgICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJJbmdyZWRpZW50ZSBubyBlbmNvbnRyYWRvIl0pOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwMCk7IC8vIEJhZCBSZXF1ZXN0CiAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiSUQgZGUgaW5ncmVkaWVudGUgbm8gcHJvcG9yY2lvbmFkbyJdKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CgogICAgY2FzZSAnREVMRVRFJzoKICAgICAgICAvLyBMw7NnaWNhIHBhcmEgbWFuZWphciBERUxFVEUgKGVsaW1pbmFyIHVuIGluZ3JlZGllbnRlIHBvciBJRCkKICAgICAgICBpZiAoaXNzZXQoJF9HRVRbJ2lkJ10pKSB7CiAgICAgICAgICAgICRpZCA9ICRfR0VUWydpZCddOwoKICAgICAgICAgICAgaGVhZGVyKCJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iKTsKICAgICAgICAgICAgaWYgKHJlcG9JbmdyZWRpZW50ZTo6ZGVsZXRlKCRpZCkpIHsKCiAgICAgICAgICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoMjA0KTsgLy8gTm8gQ29udGVudAogICAgICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJJbmdyZWRpZW50ZSBlbGltaW5hZG8gY29uIMOpeGl0byJdKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwNCk7IC8vIE5vdCBGb3VuZAogICAgICAgICAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJJbmdyZWRpZW50ZSBubyBlbmNvbnRyYWRvIl0pOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwMCk7IC8vIEJhZCBSZXF1ZXN0CiAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiSUQgZGUgaW5ncmVkaWVudGUgbm8gcHJvcG9yY2lvbmFkbyJdKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgICAvLyBMw7NnaWNhIHBhcmEgbWFuZWphciBtw6l0b2RvcyBubyBwZXJtaXRpZG9zIChvcGNpb25hbCkKICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoNDA1KTsKICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIk3DqXRvZG8gbm8gcGVybWl0aWRvIl0pOwogICAgICAgIGJyZWFrOwp9Cj8+CiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";
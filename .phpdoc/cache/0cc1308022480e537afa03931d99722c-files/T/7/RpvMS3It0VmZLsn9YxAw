1733983333
0cc1308022480e537afa03931d99722c-phpdoc%3A15d40f29d189b8d7ed2049cf916297ad-aab12bc5db6797b78a0b89970c609752
s:32912:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:19:"repoIngrediente.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:11:"\Repository";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\Repository";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Repository";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:27:"\Repository\repoIngrediente";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:1:{s:20:"\Repository\RepoCrud";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\Repository\RepoCrud";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"RepoCrud";}}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:47:"\Repository\repoIngrediente::$listaIngredientes";O:37:"phpDocumentor\Reflection\Php\Property":12:{s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:14;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:14;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\Repository\repoIngrediente::$listaIngredientes";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"listaIngredientes";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}s:49:" phpDocumentor\Reflection\Php\Property attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:5:{s:37:"\Repository\repoIngrediente::create()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"ingrediente";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:361;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:63;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2424;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Repository\repoIngrediente::create()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"create";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:35:"\Repository\repoIngrediente::read()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:2:"id";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:66;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2452;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:118;s:47:" phpDocumentor\Reflection\Location columnNumber";i:4810;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:35:"\Repository\repoIngrediente::read()";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"read";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:37:"\Repository\repoIngrediente::update()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:2:"id";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"ingrediente";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:125;s:47:" phpDocumentor\Reflection\Location columnNumber";i:4866;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:175;s:47:" phpDocumentor\Reflection\Location columnNumber";i:7380;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Repository\repoIngrediente::update()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"update";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:37:"\Repository\repoIngrediente::delete()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:2:"id";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:182;s:47:" phpDocumentor\Reflection\Location columnNumber";i:7428;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:201;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8270;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Repository\repoIngrediente::delete()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"delete";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:37:"\Repository\repoIngrediente::getAll()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:206;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8317;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:259;s:47:" phpDocumentor\Reflection\Location columnNumber";i:10846;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Repository\repoIngrediente::getAll()";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"getAll";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:12;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:269;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Repository\repoIngrediente";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"repoIngrediente";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"aab12bc5db6797b78a0b89970c609752";s:39:" phpDocumentor\Reflection\Php\File path";s:30:"Repository/repoIngrediente.php";s:41:" phpDocumentor\Reflection\Php\File source";s:10870:"<?php


    namespace Repository;
    use Models\Ingrediente;
    use Models\Alergeno;
    use Models\BdConnection;
    use PDO; // Importa PDO
    use PDOException; 
     

    Class repoIngrediente implements RepoCrud{
        
        private static $listaIngredientes = []; // Array para almacenar los ingredientes

        
        //METODOS CRUD

        public static function create($ingrediente) {
            $conn = BdConnection::getConnection();
        
            try {
                // Iniciar la transacción
                $conn->beginTransaction();
        
                // Insertar el ingrediente
                $stmt = $conn->prepare("INSERT INTO ingrediente (nombre, precio, foto, estado) 
                                        VALUES (:nombre, :precio, :foto, :estado)");
                $stmt->execute([
                    'nombre' => $ingrediente->getNombre(),
                    'precio' => $ingrediente->getPrecio(),
                    'foto' => $ingrediente->getFoto(),
                    'estado' => $ingrediente->getEstado()
                ]);
        
                // Obtener el ID del nuevo ingrediente
                $ingredienteId = $conn->lastInsertId();
        
                // Insertar los alérgenos en la tabla intermedia
                $stmtAlergeno = $conn->prepare("INSERT INTO ingrediente_alergeno (ingrediente_id, alergeno_id) 
                                                VALUES (:ingrediente_id, :alergeno_id)");
        
                foreach ($ingrediente->getAlergeno() as $alergeno) {
                    // Si $alergeno es un array, no puedes usar getId() directamente.
                    // Usamos el índice del array para obtener el 'id'
                    $stmtAlergeno->execute([
                        'ingrediente_id' => $ingredienteId,
                        'alergeno_id' => $alergeno['id'] // Accede directamente a 'id' si $alergeno es un array
                    ]);
                }
        
                // Confirmar la transacción
                $conn->commit();
                return true;
        
            } catch (PDOException $e) {
                // Revertir la transacción en caso de error
                $conn->rollBack();
                header('HTTP/1.1 500 Error en la base de datos');
                echo json_encode(["error" => $e->getMessage()]);
                return false;
            }
        }
        
        
        public static function read($id) {
            $conn = BdConnection::getConnection();
            
            try {
                // Primero, obtener el ingrediente por ID
                $stmt = $conn->prepare("SELECT * FROM ingrediente WHERE id = :id");
                $stmt->execute(['id' => $id]);
                
                // Recuperar el ingrediente
                $registro = $stmt->fetch(PDO::FETCH_OBJ);
        
                // Verificar si el ingrediente existe
                if (!$registro) {
                    http_response_code(404);
                    echo json_encode(["message" => "Ingrediente no encontrado"]);
                    return null;
                }
        
                // Ahora, obtener los alérgenos asociados a este ingrediente
                $stmtAlergenos = $conn->prepare("
                    SELECT a.* FROM alergeno a
                    INNER JOIN ingrediente_alergeno ia ON a.id = ia.alergeno_id
                    WHERE ia.ingrediente_id = :ingrediente_id
                ");
                $stmtAlergenos->execute(['ingrediente_id' => $id]);
                
                // Crear un array para los alérgenos
                $alergenosArray = [];
                while ($alergenoRow = $stmtAlergenos->fetch(PDO::FETCH_OBJ)) {
                    $alergenosArray[] = new Alergeno($alergenoRow->id, $alergenoRow->nombre, $alergenoRow->foto); // Asumimos que Alergeno tiene un constructor con id y nombre
                }
        
                // Crear el objeto ingrediente
                $ingrediente = new Ingrediente(
                    $registro->id,
                    $registro->nombre,
                    $registro->foto,
                    $registro->precio,
                    $registro->estado,
                    $alergenosArray // Pasar el array de alérgenos
                );
        
                http_response_code(200);
                header('Content-Type: application/json');
                echo json_encode($ingrediente); // Devuelve el ingrediente con alérgenos en formato JSON
                return $ingrediente;
        
            } catch (PDOException $e) {
                header('HTTP/1.1 500 Error en la base de datos');
                echo json_encode(["error" => $e->getMessage()]);
                return null;
            }
        }
        
        
        
        

        
        public static function update($id, $ingrediente) {
            // Asegurarse de que el objeto pasado es de tipo Ingrediente
            if (!$ingrediente instanceof Ingrediente) {
                header('HTTP/1.1 400 Bad Request');
                echo json_encode(["error" => "Datos de ingrediente inválidos"]);
                return false; // Salir de la función
            }
        
            $conn = BdConnection::getConnection();
        
            try {
                // Iniciar una transacción
                $conn->beginTransaction();
        
                // 1. Actualizar los datos del ingrediente
                $stmtUpdate = $conn->prepare("UPDATE ingrediente SET nombre = :nombre, precio = :precio, foto = :foto, estado = :estado WHERE id = :id");
                $stmtUpdate->execute([
                    'id' => $id,
                    'nombre' => $ingrediente->getNombre(),
                    'precio' => $ingrediente->getPrecio(),
                    'foto' => $ingrediente->getFoto(),
                    'estado' => $ingrediente->getEstado(),
                ]);
        
                // 2. Actualizar las relaciones en la tabla intermedia
                // Eliminar relaciones existentes
                $stmtDeleteRelations = $conn->prepare("DELETE FROM ingrediente_alergeno WHERE ingrediente_id = :ingrediente_id");
                $stmtDeleteRelations->execute(['ingrediente_id' => $id]);
        
                // Insertar las nuevas relaciones
                $alergenos = $ingrediente->getAlergeno(); // Asegúrate de que esto devuelva un array de ids de alérgenos
        
                foreach ($alergenos as $alergenoId) {
                    $stmtInsertRelation = $conn->prepare("INSERT INTO ingrediente_alergeno (ingrediente_id, alergeno_id) VALUES (:ingrediente_id, :alergeno_id)");
                    $stmtInsertRelation->execute([
                        'ingrediente_id' => $id,
                        'alergeno_id' => $alergenoId['id'],
                    ]);
                }
        
                // Confirmar la transacción
                $conn->commit();
                return true; // La actualización fue exitosa
            } catch (PDOException $e) {
                // Revertir la transacción en caso de error
                $conn->rollBack();
                header('HTTP/1.1 500 Error en la base de datos');
                echo json_encode(["error" => $e->getMessage()]);
                return false;
            }
        }
        
        
        
        


        public static function delete($id) {
            $conn = BdConnection::getConnection();
        
            try {
                // Preparar la sentencia SQL para eliminar el ingrediente
                $stmtDelete = $conn->prepare("DELETE FROM ingrediente WHERE id = :id");
                $stmtDelete->execute(['id' => $id]);
        
                // Verificar cuántas filas fueron afectadas
                if ($stmtDelete->rowCount() > 0) {
                    return true; // Eliminar fue exitoso
                } else {
                    return false; // No se encontró el ingrediente
                }
            } catch (PDOException $e) {
                header('HTTP/1.1 500 Error en la base de datos');
                echo json_encode(["error" => $e->getMessage()]);
                return false;
            }
        }
        
        
         
        
        public static function getAll() {
            $conn = BdConnection::getConnection();
            
            try {
                // Obtener todos los ingredientes
                $stmt = $conn->prepare("SELECT * FROM ingrediente");
                $stmt->execute();
                
                $ingredientesArray = [];
        
                while ($row = $stmt->fetch(PDO::FETCH_OBJ)) {
                    // Crear el objeto Ingrediente
                    $ingrediente = new Ingrediente(
                        $row->id,
                        $row->nombre,
                        $row->foto,
                        $row->precio,
                        $row->estado,
                         // Inicializamos el array de alérgenos vacío
                    );
        
                    // Ahora obtenemos los alérgenos para este ingrediente
                    $stmtAlergenos = $conn->prepare("
                        SELECT a.* FROM alergeno a
                        INNER JOIN ingrediente_alergeno ia ON a.id = ia.alergeno_id
                        WHERE ia.ingrediente_id = :ingrediente_id
                    ");
                    $stmtAlergenos->execute(['ingrediente_id' => $row->id]);
        
                    // Crear el array de alérgenos
                    $alergenosArray = [];
                    while ($alergenoRow = $stmtAlergenos->fetch(PDO::FETCH_OBJ)) {
                        $alergenosArray[] = new Alergeno($alergenoRow->id, $alergenoRow->nombre, $alergenoRow->foto); // Asumimos que Alergeno tiene un constructor con id y nombre
                    }
        
                    // Asignar el array de alérgenos al ingrediente
                    if (count($alergenosArray) > 0) {
                        $ingrediente->setAlergeno($alergenosArray); // Asumimos que hay un método setAlergeno en la clase Ingrediente
                    }
                    $ingrediente->setAlergeno($alergenosArray); // Asumimos que hay un método setAlergeno en la clase Ingrediente
        
                    // Agregar el ingrediente al array final
                    $ingredientesArray[] = $ingrediente->toJson();
                }
        
                header("Content-Type: application/json");
                echo json_encode($ingredientesArray);
                exit;
        
            } catch (PDOException $e) {
                header('HTTP/1.1 500 Error en la base de datos');
                echo json_encode(["error" => $e->getMessage()]);
            }
        }
        








    }";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";
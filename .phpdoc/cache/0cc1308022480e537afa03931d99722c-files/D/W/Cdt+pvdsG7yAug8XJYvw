1733682009
0cc1308022480e537afa03931d99722c-phpdoc%3A63247d150aa25d2d32c6e93cdc98e8e7-c774029d141ec43d2de6d30fefc2d9cf
s:7960:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjEzOiJBcGlfa2ViYWIucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImM3NzQwMjlkMTQxZWM0M2QyZGU2ZDMwZmVmYzJkOWNmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTc6IkFwaS9BcGlfa2ViYWIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo1MDcwOiI8P3BocAppbmlfc2V0KCdkaXNwbGF5X2Vycm9ycycsIDEpOwppbmlfc2V0KCdkaXNwbGF5X3N0YXJ0dXBfZXJyb3JzJywgMSk7CmVycm9yX3JlcG9ydGluZyhFX0FMTCk7CgpyZXF1aXJlICgiLi4vTUlhdXRvY2FyZ2Fkb3IucGhwIik7CnJlcXVpcmUgKCIuLi92ZW5kb3IvYXV0b2xvYWQucGhwIik7Cgp1c2UgTW9kZWxzXEluZ3JlZGllbnRlOwp1c2UgTW9kZWxzXEtlYmFiOyAvLyBVc2FyIGVsIG1vZGVsbyBLZWJhYgp1c2UgUmVwb3NpdG9yeVxyZXBvS2ViYWI7IC8vIENhbWJpYXIgYWwgcmVwb3NpdG9yaW8gZGUgS2ViYWJzCgokbWV0aG9kID0gJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ107Cgpzd2l0Y2ggKCRtZXRob2QpIHsKICAgIGNhc2UgJ0dFVCc6CiAgICAgICAgLy8gTMOzZ2ljYSBwYXJhIG1hbmVqYXIgR0VUIChvYnRlbmVyIHVubyBvIHZhcmlvcyBrZWJhYnMpCiAgICAgICAgaWYgKGlzc2V0KCRfR0VUWydpZCddKSAmJiAhZW1wdHkoJF9HRVRbJ2lkJ10pKSB7CiAgICAgICAgICAgICRpZCA9ICRfR0VUWydpZCddOwogICAgICAgICAgICAka2ViYWIgPSByZXBvS2ViYWI6OnJlYWQoJGlkKTsgLy8gTcOpdG9kbyBwYXJhIG9idGVuZXIgdW4ga2ViYWIgcG9yIElECiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gT2J0ZW5lciB0b2RvcyBsb3Mga2ViYWJzCiAgICAgICAgICAgICRrZWJhYnMgPSByZXBvS2ViYWI6OmdldEFsbCgpOyAvLyBNw6l0b2RvIHBhcmEgb2J0ZW5lciB0b2RvcyBsb3Mga2ViYWJzCiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJ1BPU1QnOgogICAgICAgIC8vIENhcHR1cmEgbG9zIGRhdG9zIGRlbCBjdWVycG8gZGUgbGEgc29saWNpdHVkCiAgICAgICAgJGRhdGEgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cygicGhwOi8vaW5wdXQiKSwgdHJ1ZSk7IC8vIHRydWUgY29udmllcnRlIGVsIEpTT04gZW4gdW4gYXJyYXkgYXNvY2lhdGl2bwogICAgICAgIHZhcl9kdW1wKCRkYXRhKTsKICAgICAgICAvLyBWZXJpZmljYXIgc2kgc2UgcmVjaWJpZXJvbiB0b2RvcyBsb3MgZGF0b3MgbmVjZXNhcmlvcwogICAgICAgIGlmICgKICAgICAgICAgICAgaXNzZXQoJGRhdGFbMF1bJ25vbWJyZSddKSAmJiAvLyBWZXJpZmljYXIgc2kgZWwgY2FtcG8gbm9tYnJlIGVzdMOhIHByZXNlbnRlCiAgICAgICAgICAgIGlzc2V0KCRkYXRhWzBdWydmb3RvJ10pICYmIC8vIFZlcmlmaWNhciBzaSBlbCBjYW1wbyBmb3RvIGVzdMOhIHByZXNlbnRlCiAgICAgICAgICAgIGlzc2V0KCRkYXRhWzBdWydwcmVjaW8nXSkgJiYgLy8gVmVyaWZpY2FyIHNpIGVsIGNhbXBvIHByZWNpbyBlc3TDoSBwcmVzZW50ZQogICAgICAgICAgICBpc3NldCgkZGF0YVswXVsnaW5ncmVkaWVudGVzJ10pIC8vIFZlcmlmaWNhciBzaSBlbCBjYW1wbyBpbmdyZWRpZW50ZXMgZXN0w6EgcHJlc2VudGUKICAgICAgICApIHsKICAgICAgICAgICAgLy8gQ3JlYXIgZWwgb2JqZXRvIEtlYmFiCiAgICAgICAgICAgICRpbmdyZWRpZW50ZXMgPSBbXTsKICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGFbMF1bJ2luZ3JlZGllbnRlcyddIGFzICRpbmdyZWRpZW50ZUlkKSB7CiAgICAgICAgICAgICAgICAkaW5ncmVkaWVudGVzW10gPSBbJ2lkJyA9PiAkaW5ncmVkaWVudGVJZF07IC8vIEFxdcOtIGFzdW1pbW9zIHF1ZSBjYWRhIGluZ3JlZGllbnRlIGVzIHVuIElECiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENyZWFyIGVsIG9iamV0byBLZWJhYgogICAgICAgICAgICAka2ViYWIgPSBuZXcgS2ViYWIoCiAgICAgICAgICAgICAgICBudWxsLCAgLy8gSUQgc2UgZ2VuZXJhcsOhIGF1dG9tw6F0aWNhbWVudGUKICAgICAgICAgICAgICAgICRkYXRhWzBdWydub21icmUnXSwKICAgICAgICAgICAgICAgICRkYXRhWzBdWydmb3RvJ10sCiAgICAgICAgICAgICAgICAkZGF0YVswXVsncHJlY2lvJ10sCiAgICAgICAgICAgICAgICAkaW5ncmVkaWVudGVzIC8vIExpc3RhIGRlIGluZ3JlZGllbnRlcwogICAgICAgICAgICApOwoKICAgICAgICAgICAgLy8gSW50ZW50YXIgY3JlYXIgZWwga2ViYWIKICAgICAgICAgICAgaWYgKHJlcG9LZWJhYjo6Y3JlYXRlKCRrZWJhYikpIHsKICAgICAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSgyMDEpOyAvLyBLZWJhYiBjcmVhZG8KICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiS2ViYWIgY3JlYWRvIGNvbiDDqXhpdG8iXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoNTAwKTsgLy8gRXJyb3IgZW4gbGEgY3JlYWNpw7NuCiAgICAgICAgICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIkVycm9yIGFsIGNyZWFyIGVsIGtlYmFiIl0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyAvLyBCYWQgUmVxdWVzdAogICAgICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIkRhdG9zIGRlIGtlYmFiIGludsOhbGlkb3MiXSk7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJ1BVVCc6CiAgICAgICAgLy8gQ2FwdHVyYSBsb3MgZGF0b3MgZGVsIGN1ZXJwbyBkZSBsYSBzb2xpY2l0dWQKICAgICAgICAkZGF0YSA9IGpzb25fZGVjb2RlKGZpbGVfZ2V0X2NvbnRlbnRzKCJwaHA6Ly9pbnB1dCIpLCB0cnVlKTsgLy8gdHJ1ZSBjb252aWVydGUgZWwgSlNPTiBlbiB1biBhcnJheSBhc29jaWF0aXZvCiAgICAgICAgCiAgICAgICAgLy8gVmVyaWZpY2FyIHNpIHNlIHJlY2liacOzIGVsIElECiAgICAgICAgaWYgKGlzc2V0KCRkYXRhWzBdWydpZCddKSkgewogICAgICAgICAgICAkaWQgPSAkZGF0YVswXVsnaWQnXTsgLy8gSUQgZGVsIGtlYmFiIGEgYWN0dWFsaXphcgoKICAgICAgICAgICAgLy8gQ3JlYXIgdW4gbnVldm8gb2JqZXRvIGtlYmFiIGNvbiBsb3MgZGF0b3MgcHJvcG9yY2lvbmFkb3MKICAgICAgICAgICAgJGluZ3JlZGllbnRlcyA9IFtdOwogICAgICAgICAgICBmb3JlYWNoICgkZGF0YVswXVsnaW5ncmVkaWVudGVzJ10gYXMgJGluZ3JlZGllbnRlSWQpIHsKICAgICAgICAgICAgICAgICRpbmdyZWRpZW50ZXNbXSA9IFsnaWQnID0+ICRpbmdyZWRpZW50ZUlkXTsgLy8gQXN1bWltb3MgcXVlIGNhZGEgaW5ncmVkaWVudGUgZXMgdW4gSUQKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGtlYmFiID0gbmV3IEtlYmFiKAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ2lkJ10sICAvLyBJRCBkZWwga2ViYWIKICAgICAgICAgICAgICAgICRkYXRhWzBdWydub21icmUnXSA/PyBudWxsLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ2ZvdG8nXSA/PyBudWxsLAogICAgICAgICAgICAgICAgJGRhdGFbMF1bJ3ByZWNpbyddID8/IG51bGwsCiAgICAgICAgICAgICAgICAkaW5ncmVkaWVudGVzID8/IFtdIC8vIEFycmF5IGRlIElEcyBkZSBpbmdyZWRpZW50ZXMKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGhlYWRlcigiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIik7CiAgICAgICAgICAgIC8vIExsYW1hciBhbCBtw6l0b2RvIGRlIGFjdHVhbGl6YWNpw7NuIGRlbCByZXBvc2l0b3JpbwogICAgICAgICAgICBpZiAocmVwb0tlYmFiOjp1cGRhdGUoJGlkLCAka2ViYWIpKSB7CiAgICAgICAgICAgICAgICBodHRwX3Jlc3BvbnNlX2NvZGUoMjAwKTsgLy8gT0sKICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiS2ViYWIgYWN0dWFsaXphZG8gY29ycmVjdGFtZW50ZSJdKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDQpOyAvLyBOb3QgRm91bmQKICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiS2ViYWIgbm8gZW5jb250cmFkbyJdKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyAvLyBCYWQgUmVxdWVzdAogICAgICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIklEIGRlIGtlYmFiIG5vIHByb3BvcmNpb25hZG8iXSk7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgIGNhc2UgJ0RFTEVURSc6CiAgICAgICAgLy8gTMOzZ2ljYSBwYXJhIG1hbmVqYXIgREVMRVRFIChlbGltaW5hciB1biBrZWJhYiBwb3IgSUQpCiAgICAgICAgaWYgKGlzc2V0KCRfR0VUWydpZCddKSkgewogICAgICAgICAgICAkaWQgPSAkX0dFVFsnaWQnXTsKCiAgICAgICAgICAgIGhlYWRlcigiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIik7CiAgICAgICAgICAgIGlmIChyZXBvS2ViYWI6OmRlbGV0ZSgkaWQpKSB7CgogICAgICAgICAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDIwNCk7IC8vIE5vIENvbnRlbnQKICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiS2ViYWIgZWxpbWluYWRvIGNvbiDDqXhpdG8iXSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDQpOyAvLyBOb3QgRm91bmQKICAgICAgICAgICAgICAgIGVjaG8ganNvbl9lbmNvZGUoWyJtZXNzYWdlIiA9PiAiS2ViYWIgbm8gZW5jb250cmFkbyJdKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyAvLyBCYWQgUmVxdWVzdAogICAgICAgICAgICBlY2hvIGpzb25fZW5jb2RlKFsibWVzc2FnZSIgPT4gIklEIGRlIGtlYmFiIG5vIHByb3BvcmNpb25hZG8iXSk7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgICAgLy8gTMOzZ2ljYSBwYXJhIG1hbmVqYXIgbcOpdG9kb3Mgbm8gcGVybWl0aWRvcyAob3BjaW9uYWwpCiAgICAgICAgaHR0cF9yZXNwb25zZV9jb2RlKDQwNSk7CiAgICAgICAgZWNobyBqc29uX2VuY29kZShbIm1lc3NhZ2UiID0+ICJNw6l0b2RvIG5vIHBlcm1pdGlkbyJdKTsKICAgICAgICBicmVhazsKfQo/PgoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";